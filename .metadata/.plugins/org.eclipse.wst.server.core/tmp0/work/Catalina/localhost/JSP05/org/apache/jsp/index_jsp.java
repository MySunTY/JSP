/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-05-10 06:08:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<title>간단한 회원가입</title>\r\n");
      out.write("	 <style>\r\n");
      out.write("	 	#wrap{\r\n");
      out.write("	 		width: 300px;\r\n");
      out.write("	 		border: 5px solid lightgray;		 \r\n");
      out.write("	 		padding: 30px;\r\n");
      out.write("	 		margin: 0 auto;\r\n");
      out.write("	 	}\r\n");
      out.write("	 	\r\n");
      out.write("	 	input[name=\"id\"]  {\r\n");
      out.write("	 	 margin-left: 48px;}\r\n");
      out.write("	 	 \r\n");
      out.write("	 	input[name=\"nm\"] {\r\n");
      out.write("	 	 margin-left : 32px;}\r\n");
      out.write("	 	\r\n");
      out.write("	 	input[name=\"phone\"]{\r\n");
      out.write("	 	 margin-left : 16px;\r\n");
      out.write("	 	} \r\n");
      out.write("	 	 \r\n");
      out.write("	 \r\n");
      out.write("	 	 \r\n");
      out.write("	 \r\n");
      out.write("	 </style>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		<div id=\"wrap\">\r\n");
      out.write("			<!-- <form method=\"get\" action=\"main.jsp\"> -->\r\n");
      out.write("			<form method=\"post\" action=\"main.jsp\"> \r\n");
      out.write("			<!-- 추가 : method 를 get으로 하면 정보가 다 보이기 때문에 가리기 위해서는 post (전기신호로바뀜)로 한다 \r\n");
      out.write("				 단점은 한글이 깨진다 그래서 utf-8을 -->\r\n");
      out.write("			\r\n");
      out.write("				<h1>회원가입</h1>\r\n");
      out.write("				<hr>\r\n");
      out.write("				 ID  : <input type=\"text\" name=\"id\" placeholder=\"아이디 입력\"  autofocus > <br>\r\n");
      out.write("				비밀번호 : <input type=\"password\" name=\"pw\" placeholder=\"숫자 + 특수문자 조합\" required> <br>\r\n");
      out.write("				이름 : <input type=\"text\" name=\"nm\"> <br> <!-- name=\"name\"은 예약어이기 때문에 사용금지  -->\r\n");
      out.write("				연락처 : <input type=\"text\" name=\"phone\"> <br>\r\n");
      out.write("				<hr>\r\n");
      out.write("				\r\n");
      out.write("				<!--추가  -->\r\n");
      out.write("				선호색상 : <input type=\"color\" name=\"c\" >\r\n");
      out.write("				<!-- 태그 사이에 text노드가 존재한다.   -->\r\n");
      out.write("				<fieldset> <!--  실제 작업시 사용을 많이 안함?! -->\r\n");
      out.write("					<legend>관심분야</legend>\r\n");
      out.write("					JAVA<input type=\"radio\" name='subject' value=\"java\">\r\n");
      out.write("					HTML<input type=\"radio\" name='subject' value=\"html\">\r\n");
      out.write("					CSS<input type=\"radio\" name='subject' value=\"css\">\r\n");
      out.write("				<!--   value값을 지정안하면 그냥 on값으로 표시된다  -->\r\n");
      out.write("				<!-- 실제는 radio 보다는 div를 많이 사용함 : 이유?! 모바일 환경으로 많이 바뀌어서 \r\n");
      out.write("					 input, hover도 div로 사용함\r\n");
      out.write("					 header 같은 시멘틱 태그도 사용 안 함\r\n");
      out.write("					 table도 사용안함. 왜냐하면 반응형이 안되서 \r\n");
      out.write("					 결국 div,span을 많이 사용함. 모양이 없는 기본형이라서 변형해서 사용한다고 함 \r\n");
      out.write("				 -->	\r\n");
      out.write("				</fieldset>\r\n");
      out.write("				\r\n");
      out.write("				<fieldset>\r\n");
      out.write("					<legend>수강과목</legend>\r\n");
      out.write("					JSP<input type=\"checkbox\" name=\"jsp\">\r\n");
      out.write("					JAVA<input type=\"checkbox\" name=\"java\">			\r\n");
      out.write("				</fieldset>\r\n");
      out.write("				\r\n");
      out.write("		\r\n");
      out.write("				<input type=\"hidden\" name=\"hid\" value=\"요주의\">\r\n");
      out.write("				<!-- 아이디 중복찾기 할때 사용됨 : 예전에 비교해서 아이디 중복여부 체크했었음 / \r\n");
      out.write("				     그러나 요즘은 Ajax(비동기식) : xmal을 자바스크립트로 통신시키는 기법 \r\n");
      out.write("				     			             동기식이 아닌 비동기식으로 서버의 데이터를 가져와 비교할 수 있다?!-->\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write(" 				<!-- 추가  end-->\r\n");
      out.write("				\r\n");
      out.write("				<input type=\"submit\" value=\"회원가입!\">\r\n");
      out.write("				 \r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("			</form>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		</div>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
